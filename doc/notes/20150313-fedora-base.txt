#
# <meta:header>
#   <meta:licence>
#     Copyright (C) 2015 by Wizzard Solutions Ltd, ischnura@metagrid.co.uk
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

#
# DEPRECATED - see 20150317-fedora-base.txt
#

#---------------------------------------------------------------------
# ISO image book keeping. 
#[root@kvm-server] 

    #
    # These should all be hard links to the same physical data.
    /var/raid/zero/active/deluge/Fedora-Server-DVD-x86_64-21/Fedora-Server-DVD-x86_64-21.iso
    /var/raid/zero/active/deluge/Fedora-Server-DVD-x86_64-21/Fedora-Server-21-x86_64-CHECKSUM
    /var/raid/zero/active/libvirt/iso/Fedora-Server-DVD-x86_64-21.iso
    
    /var/raid/zero/archive/linux/fedora/21/x86/Fedora-Server-DVD-x86_64-21.iso
    /var/raid/zero/archive/linux/fedora/21/x86/Fedora-Server-21-x86_64-CHECKSUM

#---------------------------------------------------------------------
# Create the initial VM.
#[root@kvm-server] 

    Name : fedora-21-001
    Size : 4 cpu cores 1G memory

    File : fedora-21-001
        Size : 8096 Mbyte
        Type : raw
        Pool : base
    
    MAC  : 52:54:00:00:01:07

    Manual install of minimal Fedora.

        512M swap
        512M btrfs /boot
        auto btrfs /

#---------------------------------------------------------------------
# Check the image alignment.
# http://libguestfs.org/virt-alignment-scan.1.html
#[root@kvm-server] 

    vmdomain=fedora-21-001
    virt-alignment-scan -d "${vmdomain:?}"

        /dev/sda1      1048576         1024K   ok
        /dev/sda2    537919488         1024K   ok
        /dev/sda3   1074790400         1024K   ok

#---------------------------------------------------------------------
# Mount the virtual disc.
#[root@kvm-server] 

    vmdomain=fedora-21-001
    vmmount=$(mktemp --directory)

    guestmount --domain "${vmdomain:?}" --inspector --rw --selinux "${vmmount:?}"

        guestmount: no operating system was found on this disk

    virt-filesystems -d "${vmdomain:?}"

        /dev/sda2
        /dev/sda3


    guestmount --domain "${vmdomain:?}" --mount /dev/sda2 --rw --selinux "${vmmount:?}"

        libguestfs: error: mount_options: /dev/sda2 on / (options: ''): mount: wrong fs type, bad option, bad superblock on /dev/sda2,
               missing codepage or helper program, or other error
               In some cases useful info is found in syslog - try
               dmesg | tail  or so
        guestmount: '/dev/sda2' could not be mounted.
        guestmount: Did you mean to mount one of these filesystems?
        guestmount: 	/dev/sda1 (swap)
        guestmount: 	/dev/sda2 (btrfs)
        guestmount: 	/dev/sda3 (btrfs)


    guestmount --domain "${vmdomain:?}" --mount /dev/sda3 --rw --selinux "${vmmount:?}"

        libguestfs: error: mount_options: /dev/sda3 on / (options: ''): mount: wrong fs type, bad option, bad superblock on /dev/sda3,
               missing codepage or helper program, or other error
               In some cases useful info is found in syslog - try
               dmesg | tail  or so
        guestmount: '/dev/sda3' could not be mounted.
        guestmount: Did you mean to mount one of these filesystems?
        guestmount: 	/dev/sda1 (swap)
        guestmount: 	/dev/sda2 (btrfs)
        guestmount: 	/dev/sda3 (btrfs)

    #
    # I suspect CentOS-6 can't read the Fedora-21 btrfs volumes ...
     
    #
    # Try again with standard disc format ...

#---------------------------------------------------------------------
#---------------------------------------------------------------------
# Create the initial VM.
#[root@kvm-server] 

    Name : fedora-21-002
    Size : 4 cpu cores 1G memory

    File : fedora-21-002
        Size : 8096 Mbyte
        Type : raw
        Pool : base
    
    MAC  : 52:54:00:00:01:07

    Manual install of minimal Fedora.

        512M swap
        512M ext4 /boot
        auto ext4 /

#---------------------------------------------------------------------
# Mount the virtual disc.
#[root@kvm-server] 

    vmdomain=fedora-21-002
    vmmount=$(mktemp --directory)

    guestmount --domain "${vmdomain:?}" --inspector --rw --selinux "${vmmount:?}"

    #
    # That works - so guess was probably right.
    # Older CentOS host system can't read the btrfs partitions in the Fedora image.
    # Hmm ... use a Docker container for the host ?


# -----------------------------------------
# Clean the eth0 interface config.
#[root@kvm-server] 

    cat "${vmmount:?}/etc/sysconfig/network-scripts/ifcfg-eth0"
    sed -i '
        /^UUID/d
        /^NM_CONTROLLED/d
        /^HWADDR/d
        ' "${vmmount:?}/etc/sysconfig/network-scripts/ifcfg-eth0"

# -----------------------------------------
# Configure eth0 interface to start on boot.
#[root@kvm-server] 

    cat "${vmmount:?}/etc/sysconfig/network-scripts/ifcfg-eth0"
    sed -i '
        s/^ONBOOT=.*/ONBOOT=yes/
        ' "${vmmount:?}/etc/sysconfig/network-scripts/ifcfg-eth0"

# -----------------------------------------
# Remove hardcoded hostname.
#[root@kvm-server] 

    cat "${vmmount:?}/etc/hostname"
    rm -f "${vmmount:?}/etc/hostname"

# -----------------------------------------
# Add our SSH keys.
#[root@kvm-server] 

    if [ ! -e "${vmmount:?}/root/.ssh" ]
    then
        mkdir "${vmmount:?}/root/.ssh"
    fi

    pushd "${vmmount:?}/root"
        pushd '.ssh'

            if [ ! -e 'keys' ]
            then
                mkdir 'keys'
            fi
            pushd 'keys'
                wget 'http://data.metagrid.co.uk/sshkeys/dmr.roe.ac.uk.pub'
                wget 'http://data.metagrid.co.uk/sshkeys/stv.roe.ac.uk.pub'
            popd

            for keyfile in $(find 'keys' -name '*.pub')
            do
                echo "${keyfile:?}" 
                cat  "${keyfile:?}" >> 'authorized_keys'
            done

        popd

        chown root:root   '.ssh'
        chmod g=,o=,u=rwx '.ssh'

    popd
    
# -----------------------------------------
# Disable SSH password login.
#[root@kvm-server] 

    sed -i '
        s/^PasswordAuthentication .*/PasswordAuthentication no/
        ' "${vmmount:?}/etc/ssh/sshd_config"

# -----------------------------------------
# Remove old SSH host keys.
#[root@kvm-server] 

    pushd "${vmmount:?}/etc/ssh"

        ls -al ssh_host*
        rm -f 'ssh_host*'

    popd

# -----------------------------------------
# Randomise the root password.

    rootpass=$(pwgen 40 1)

    sed -i '
        /^root:/ {
            s/^root:\([^:]*\):\(.*\)/root:$6$'${rootpass:?}':\2/
            }
        ' "${vmmount:?}/etc/shadow"

#---------------------------------------------------------------------
# Unmount the virtual disc.
#[root@kvm-server] 

    fusermount -u "${vmmount:?}"

# -----------------------------------------
# Fix the SELinux attibutes.
# https://danwalsh.livejournal.com/33728.html
#[root@kvm-server] 

    guestfish -i "${vmdomain:?}"

        sh "ls -alZ /root/.ssh"

        sh "/usr/sbin/sestatus"

        sh "/usr/bin/setfattr -n 'security.selinux' -v 'system_u:object_r:ssh_home_t:s0' '/root/.ssh'"
        sh "/usr/bin/setfattr -n 'security.selinux' -v 'system_u:object_r:ssh_home_t:s0' '/root/.ssh/authorized_keys'"

        sh "/usr/bin/setfattr -n 'security.selinux' -v 'system_u:object_r:ssh_home_t:s0' '/root/.ssh/keys'"

        sh "/usr/bin/setfattr -n 'security.selinux' -v 'system_u:object_r:etc_t:s0'     '/etc/ssh/sshd_config'"
        sh "/usr/bin/setfattr -n 'security.selinux' -v 'system_u:object_r:etc_t:s0'     '/etc/passwd'"
        sh "/usr/bin/setfattr -n 'security.selinux' -v 'system_u:object_r:shadow_t:s0'  '/etc/shadow'"

# /etc/sysconfig/network
# /etc/sysconfig/network-scripts/ifcfg-eth0
# /etc/ssh/sshd_config

    exit

# -----------------------------------------
# Sparsify the image file.
#[root@kvm-server] 

    #
    # TODO do we need this ?
    # Fix for lvresize bug (same size fails)
    # https://bugzilla.redhat.com/show_bug.cgi?id=834712
    # --ignore ubuntu-base

    vmsource=$(virsh domblklist "${vmdomain:?}" | sed -n 's/^vda[ ]*\([^ ]*\)/\1/p')
    vmsparse=$(mktemp)

    virt-sparsify \
        --compress \
        --convert qcow2 \
        "${vmsource:?}" \
        "${vmsparse:?}"

    ls -alh "${vmsource:?}"
    ls -alh "${vmsparse:?}"

# -----------------------------------------
# Install our sparse image.
#[root@kvm-server] 

    volpool=base
    volname=fedora-21-base-$(date '+%Y%m%d')
    volfile=${volname:?}.raw

    virsh vol-delete --pool "${volpool:?}" "${volfile:?}"
    virsh vol-create-as "${volpool:?}" "${volfile:?}" 8GiB --allocation 0 --format raw
    
    virsh vol-upload --pool "${volpool:?}" "${volfile:?}" "${vmsparse:?}"
    virsh vol-info   --pool "${volpool:?}" "${volfile:?}"
    virsh vol-path   --pool "${volpool:?}" "${volfile:?}"

# -----------------------------------------
# Test our new image ...
#[root@kvm-server] 

    ischnura-createvm

        [1] nu
        [2] xi
        ....
        Select machine name (1) 1

        Available base images
        [1] ...
        [2] fedora-21-base-20150316.raw
        ....
        Select base image (1) 2 

        INFO : Node name [nu]
        INFO : Base name [fedora-21-base-20150316.raw]
        INFO : Disc name [nu.qcow]
        INFO : Disc size [8G]
        ....


# -----------------------------------------
# Tidy up ...
#[root@kvm-server] 

    virsh undefine --remove-all-storage "${vmdomain:?}"
    rmdir "${vmmount:?}"
    rm -f "${vmsparse:?}"

# -----------------------------------------
# Create a sparse tar file and upload it to our repository.
#[root@kvm-server] 

    volpath=$(virsh vol-path --pool "${volpool:?}" "${volfile:?}")
    tarfile=${volname:?}.tar.gz
    
    pushd "$(mktemp --directory)"

        ln -s "${volpath:?}" "${volfile:?}"

        tar \
            --gzip \
            --create \
            --sparse \
            --verbose \
            --dereference \
            --file "${tarfile:?}" \
            "${volfile:?}"

        rsync \
            --checksum \
            --stats --human-readable --progress \
            "${tarfile:?}" \
            data.metagrid.co.uk:/var/local/websites/data/ischnura/base

    popd

# -----------------------------------------
# Download the sparse tar file and install it as a volume.
#[root@kvm-server] 

    volname=fedora-21-base-$(date '+%Y%m%d')
    volfile=${volname:?}.raw
    tarfile=${volname:?}.tar.gz

    newpool=base
    newname=fedora-21-base-test
    newfile=${newname:?}.base
    
    pushd "$(mktemp --directory)"

        wget "http://data.metagrid.co.uk/ischnura/base/${tarfile:?}"

        tar \
            --gzip \
            --extract \
            --verbose \
            --file "${tarfile:?}"

        virsh vol-create-as "${newpool:?}" "${newfile:?}" 8GiB --allocation 0 --format raw
        virsh vol-upload --pool "${newpool:?}" "${newfile:?}" "${volfile:?}"
        virsh vol-info   --pool "${newpool:?}" "${newfile:?}"
        virsh vol-path   --pool "${newpool:?}" "${newfile:?}"

    popd

# -----------------------------------------
# Test our new image ...
#[root@kvm-server] 

    ischnura-createvm

        [1] nu
        [2] xi
        ....
        Select machine name (1) 1

        Available base images
        [1] ...
        [2] fedora-21-base-20150316.raw
        [2] fedora-21-base-test.base
        ....
        Select base image (1) 2 

        INFO : Node name [nu]
        INFO : Base name [fedora-21-base-test.base]
        INFO : Disc name [nu.qcow]
        INFO : Disc size [8G]
        ....



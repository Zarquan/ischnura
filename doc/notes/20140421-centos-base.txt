#
# <meta:header>
#   <meta:licence>
#     Copyright (C) 2014 by Wizzard Solutions Ltd, ischnura@metagrid.co.uk
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

#---------------------------------------------------------------------
# Most if not all of this is already available using virt-builder.
# http://libguestfs.org/download/builder/README
#
# Some of this is available using virt-sysprep
# http://libguestfs.org/virt-sysprep.1.html
#
# Previous version of these notes used "touch .autorelabel" to trigger a SELinux relabel.
# Result is the VM images are waaaay too slow to boot.
# This version tries to avoid having to use .autorelabel.


#---------------------------------------------------------------------
# Create the initial VM.
#[root@kvm-server] 

    Name : centos-65-initial
    File : centos-65-initial
    Pool : base
    
    MAC  : 52:54:00:00:01:05

    Manual install of minimal CentOS.
    Bare ext4 partition at /    
    No swap partition.

#---------------------------------------------------------------------
# Check the image alignment.
# http://libguestfs.org/virt-alignment-scan.1.html
#[root@kvm-server] 

    vmdomain=centos-65-initial
    virt-alignment-scan -d "${vmdomain:?}"

        /dev/sda1      1048576         1024K   ok

#---------------------------------------------------------------------
# Mount the virtual disc.
#[root@kvm-server] 

    vmdomain=centos-65-initial
    vmmount=$(mktemp --directory)

    guestmount --domain "${vmdomain:?}" --inspector --rw --selinux "${vmmount:?}"

    ls -al "${vmmount:?}"

# -----------------------------------------
# Clean the eth0 interface config.
#[root@kvm-server] 

    cat "${vmmount:?}/etc/sysconfig/network-scripts/ifcfg-eth0"
    sed -i '
        /^UUID/d
        /^NM_CONTROLLED/d
        /^HWADDR/d
        ' "${vmmount:?}/etc/sysconfig/network-scripts/ifcfg-eth0"

# -----------------------------------------
# Configure eth0 interface to start on boot.
#[root@kvm-server] 

    cat "${vmmount:?}/etc/sysconfig/network-scripts/ifcfg-eth0"
    sed -i '
        s/^ONBOOT=.*/ONBOOT=yes/
        ' "${vmmount:?}/etc/sysconfig/network-scripts/ifcfg-eth0"

# -----------------------------------------
# Delete the persistent-net rule for eth0.
#[root@kvm-server] 

    cat   "${vmmount:?}/etc/udev/rules.d/70-persistent-net.rules"
    rm -f "${vmmount:?}/etc/udev/rules.d/70-persistent-net.rules"

# -----------------------------------------
# Remove hardcoded hostname.
#[root@kvm-server] 

    cat "${vmmount:?}/etc/sysconfig/network"
    sed -i '
        /^HOSTNAME/d
        ' "${vmmount:?}/etc/sysconfig/network"

# -----------------------------------------
# Add our SSH keys.
#[root@kvm-server] 

    if [ ! -e "${vmmount:?}/root/.ssh" ]
    then
        mkdir "${vmmount:?}/root/.ssh"
    fi

    pushd "${vmmount:?}/root/.ssh"

        if [ ! -e 'keys' ]
        then
            mkdir 'keys'
        fi
        pushd 'keys'
            wget 'http://data.metagrid.co.uk/sshkeys/zarquan.metagrid.co.uk.pub'
            wget 'http://data.metagrid.co.uk/sshkeys/jenifer.metagrid.co.uk.pub'
        popd

        for keyfile in $(find 'keys' -name '*.pub')
        do
            echo "${keyfile:?}" 
            cat  "${keyfile:?}" >> 'authorized_keys'
        done

    popd
    
    chown root:root   "${vmmount:?}/root/.ssh"
    chmod g=,o=,u=rwx "${vmmount:?}/root/.ssh"

    #
    # This won't work
    # restorecon -R -v "${vmmount:?}/root/.ssh"

    #
    # These won't work
    # https://bugzilla.redhat.com/show_bug.cgi?id=1060423
    #
    # setfattr -n 'security.selinux' -v 'system_u:object_r:ssh_home_t:s0' ${vmmount:?}/root/.ssh
    # getfattr -n 'security.selinux' ${vmmount:?}/root/.ssh
    #
    # setfattr -n 'security.selinux' -v 'system_u:object_r:ssh_home_t:s0' ${vmmount:?}/root/.ssh/authorized_keys
    # getfattr -n 'security.selinux' ${vmmount:?}/root/.ssh/authorized_keys

# -----------------------------------------
# Disable SSH password login.
#[root@kvm-server] 

    sed -i '
        s/^PasswordAuthentication .*/PasswordAuthentication no/
        ' "${vmmount:?}/etc/ssh/sshd_config"

# -----------------------------------------
# Remove SSH host keys.
#[root@kvm-server] 


# -----------------------------------------
# Randomise the root password.
# WARN - This doesn't actually set the password to the right value.
# It probably is random, but not what we expect it to be.
#[root@kvm-server] 

    rootpass=$(pwgen 20 1 | sha512sum | cut --delimiter ' ' --fields 1)

    sed -i '
        /^root:/ {
            s/^root:\([^:]*\):\(.*\)/root:$6$'${rootpass:?}':\2/
            }
        ' "${vmmount:?}/etc/shadow"

#---------------------------------------------------------------------
# Unmount the virtual disc.
#[root@kvm-server] 

    fusermount -u "${vmmount:?}"

# -----------------------------------------
# Fix the SELinux attibutes.
# https://danwalsh.livejournal.com/33728.html
#[root@kvm-server] 

    guestfish -i "${vmdomain:?}"

        sh "/usr/sbin/sestatus"

        sh "/usr/bin/setfattr -n 'security.selinux' -v 'system_u:object_r:ssh_home_t:s0' '/root/.ssh'"
        sh "/usr/bin/setfattr -n 'security.selinux' -v 'system_u:object_r:ssh_home_t:s0' '/root/.ssh/authorized_keys'"

        sh "/usr/bin/setfattr -n 'security.selinux' -v 'system_u:object_r:etc_t:s0'     '/etc/ssh/sshd_config'"
        sh "/usr/bin/setfattr -n 'security.selinux' -v 'system_u:object_r:etc_t:s0'     '/etc/passwd'"
        sh "/usr/bin/setfattr -n 'security.selinux' -v 'system_u:object_r:shadow_t:s0'  '/etc/shadow'"

# /etc/sysconfig/network
# /etc/sysconfig/network-scripts/ifcfg-eth0
# /etc/ssh/sshd_config

    exit

# TODO - can we do all of the above by uploading and running a script ?
# TODO - full list of the files we touched
# TODO - set root password using guestfish ?

# TODO - can we do much of this on firstboot ?
# http://askubuntu.com/questions/156771/run-a-script-only-at-the-very-first-boot
# TODO - when does a firstboot script run ?  


# -----------------------------------------
# Sparsify the image file.
#[root@kvm-server] 

    #
    # TODO do we need this ?
    # Fix for lvresize bug (same size fails)
    # https://bugzilla.redhat.com/show_bug.cgi?id=834712
    # --ignore ubuntu-base

    vmsource=$(virsh domblklist "${vmdomain:?}" | sed -n 's/^vda[ ]*\([^ ]*\)/\1/p')
    vmsparse=$(mktemp)

    virt-sparsify \
        --compress \
        --convert qcow2 \
        --ignore ubuntu-base \
        "${vmsource:?}" \
        "${vmsparse:?}"

    ls -alh "${vmsource:?}"
    ls -alh "${vmsparse:?}"

# -----------------------------------------
# Install our sparse image.
#[root@kvm-server] 

    volpool=base
    volname=centos-65-base-20140421
    volfile=${volname:?}.qcow

    virsh vol-delete --pool "${volpool:?}" "${volfile:?}"
    virsh vol-create-as "${volpool:?}" "${volfile:?}" 8GiB --allocation 0 --format qcow2
    
    virsh vol-upload --pool "${volpool:?}" "${volfile:?}" "${vmsparse:?}"
    virsh vol-info   --pool "${volpool:?}" "${volfile:?}"
    virsh vol-path   --pool "${volpool:?}" "${volfile:?}"

# -----------------------------------------
# Tidy up ...
#[root@kvm-server] 

    virsh undefine --remove-all-storage "${vmdomain:?}"
    rmdir "${vmmount:?}"
    rm -f "${vmsparse:?}"

# -----------------------------------------
# Try using our new image ...
#[root@kvm-server] 

    ischnura-createvm

        [1] nu
        [2] xi
        ....
        Select machine name (1) 1

        Available base images
        [1] centos-63-base-20130106.qcow
        [2] centos-65-base-20140211.qcow
        ....
        Select base image (1) 2 

        INFO : Node name [nu]
        INFO : Base name [centos-65-base-20140211.qcow]
        INFO : Disc name [nu.qcow]
        INFO : Disc size [8G]
        ....

# -----------------------------------------
# Create a sparse tar file and upload it to our repository.
#[root@kvm-server] 

    volpath=$(virsh vol-path --pool "${volpool:?}" "${volfile:?}")
    tarfile=${volname:?}.tar.gz
    basedir=/var/local/projects/ischnura/base
    
    pushd "$(mktemp --directory)"

        ln -s "${volpath:?}" "${volfile:?}"

        tar \
            --gzip \
            --create \
            --sparse \
            --verbose \
            --dereference \
            --file "${tarfile:?}" \
            "${volfile:?}"

        rsync \
            --checksum \
            --stats --human-readable --progress \
            "${tarfile:?}" \
            data.metagrid.co.uk:/var/local/websites/data/ischnura/base

    popd

# -----------------------------------------
# Download the sparse tar file and install it as a volume.
#[root@kvm-server] 

    volpool=base
    volname=centos-65-base-20140421
    volfile=${volname:?}.qcow

    newfile=test-001.qcow
    tarfile=centos-65-base-20140421.tar.gz
    
    pushd "$(mktemp --directory)"

        wget "http://data.metagrid.co.uk/ischnura/base/${tarfile:?}"

        tar \
            --gzip \
            --extract \
            --verbose \
            --file "${tarfile:?}"

        virsh vol-create-as "${volpool:?}" "${newfile:?}" 8GiB --allocation 0 --format qcow2
        virsh vol-upload --pool "${volpool:?}" "${newfile:?}" "${volfile:?}"
        virsh vol-info   --pool "${volpool:?}" "${newfile:?}"
        virsh vol-path   --pool "${volpool:?}" "${newfile:?}"

    popd

# -----------------------------------------
# Try using our new image ...
#[root@kvm-server] 

    ischnura-createvm

        [1] nu
        ....
        Select machine name (1) 1

        Available base images
        [1] centos-63-base-20130106.qcow
        [2] centos-65-base-20140211.qcow
        ....
        [6] test-001.qcow
        ....
        Select base image (1) 6

        INFO : Node name [nu]
        INFO : Base name [test-001.qcow]
        INFO : Disc name [nu.qcow]
        INFO : Disc size [8G]
        ....





